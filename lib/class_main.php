<?php/** Main Class **/  if (!defined("_VALID_PHP"))      die('Direct access to this location is not allowed.');  class Main  {      /**       * Main::__construct()       *        * @return       */      function __construct()      {      }	  /**	   * Main::CheckUniqueEmail()	   * 	   * @return	   */	  public function CheckUniqueEmail() {		global $db,$user;			$c = $db->first("SELECT * FROM user WHERE email = '".$_GET["email"]."'");			if ($c) {				$result["success"] = "0";				$result["msg"] = "Sellise e-mailiga kasutaja on juba olemas";			} else {				$result["success"] = "1";				$result["msg"] = "Cool, sellist emaili veel ei ole olemas.";			}		echo json_encode($result);	  }  	  /**	   * Main::CheckBrandUrl()	   * 	   * @return	   */	  public function CheckBrandUrl() {		global $db,$user;			$c = $db->first("SELECT * FROM brand WHERE slug = '".$_GET["slug"]."'");			if ($c) {				$result["success"] = "0";				$result["msg"] = "Selline veebiaadress on juba olemas, palu vali teissugune aadress";			} else {				$result["success"] = "1";				$result["msg"] = "Cool, sellist veebiaadressi veel ei ole olemas.";			}		echo json_encode($result);	  }  	  /**	   * Main::AddProductForm()	   * 	   * @return	   */	  public function AddProductForm() {		global $db,$user,$core;		$data = array(			"user_id" => $user->uid,			"brand_id" => $user->brandId,			"category_id" => $_POST["category"],			"name" => $_POST["name"],			"description" => $_POST["description"],			"rentPrice" => $_POST["rentPrice"],			"sellPrice" => $_POST["sellPrice"]		);		$product_id = $db->insert("product",$data);								$files = json_decode($_POST["f"]);		$i=0;		foreach($files as $key => $val):			$explode_filename = explode('.', $val->FileName);			$new_filename = current($explode_filename).'_'.date('YmdHis').'.'.end($explode_filename);			file_put_contents('../upload/'.$new_filename, base64_decode($val->Base64));			if ($i===0) { 				$data = array(					"cover" => $new_filename				);							$db->update("product",$data,"id = '".$product_id."'");			}			$data = array(				"product_id" => $product_id,				"dir" => $new_filename			);			$db->insert("product_picture",$data);		$i++;		endforeach;		$result["success"] = "1";		$result["url"] = $core->site_url.$user->brandSlug."/productAdded";		echo json_encode($result,true);			  }  	  /**	   * Main::LoadBrandProducts()	   * 	   * @return	   */	  public function LoadBrandProducts() {		global $db,$user;			$products = $db->fetch_all("				SELECT 				a.user_id,a.brand_id as brandId,a.category_id as categoryId,a.name as productName,a.description as productDescription,a.rentPrice,a.sellPrice,a.active,a.cover as productCover,				c.name as categoryName				FROM product AS a				LEFT JOIN category as c ON c.id = a.category_id				WHERE a.brand_id = '".$_GET["brand_id"]."'");			if ($products) {				$result["success"] = "1";				$result["data"] = $products;			}	else {				$result["success"] = "0";				$result["msg"] = '<h4>Sa pole veel midagi renti pannud</h4><a class="btn btn-success" href="'.$user->brandSlug.'/brandAddProduct"><i class="fa-solid fa-plus"></i> Lisa toode</a>';			}					echo json_encode($products);	  }  /**	   * Main::LoadCategory()	   * 	   * @return	   */	  public function LoadCategory() {		global $db,$user;						$cats = $db->fetch_all("SELECT * FROM category");			if ($cats) {			$i=0;			foreach ($cats as $key => $value):						$result["data"][$i]["id"] = $value["id"];			$result["data"][$i]["name"] = $value["name"];			$result["data"][$i]["description"] = $value["description"];			$result["data"][$i]["picture"] = $value["picture"];						$i++;			endforeach;			$result["success"] = "1";			} else {			$result["success"] = "0";			$result["msg"] = "Kategooriaid ei leitud.";							}			echo json_encode($result,true);	  }	  }	?>